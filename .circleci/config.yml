version: 2.1

commands:
  restore_build_cache:
    steps:
      - restore_cache:
          keys:
            - docker-cache-{{ checksum "Dockerfile" }}-{{ checksum "src/Gemfile.lock" }}
          paths:
            - ~/caches/images.tar
      - run:
          command: |
            if [[ -e ~/caches/images.tar ]]; then
              docker load -i ~/caches/images.tar
            fi
          name: docker load
      - restore_cache:
          keys:
            - assets-{{ .Branch }}-{{ .Revision }}
          name: assets restore cache

jobs:
  build-rails:
    machine: true
    steps:
      - checkout
      - restore_cache:
          keys:
            - docker-cache-{{ checksum "Dockerfile" }}-{{ checksum "src/Gemfile.lock" }}
          paths:
            - ~/caches/images.tar
      - run:
          command: |
            if [[ -e ~/caches/images.tar ]]; then
              docker load -i ~/caches/images.tar
            fi
          name: docker load
      - run:
          command: docker-compose up -d --build
          name: docker up
      - run:
          command: mkdir -p ~/caches
          name: mkdir -p ~/caches
      - run:
          command: |
            if [[ ! -e ~/caches/images.tar ]]; then
              docker save -o ~/caches/images.tar $(docker images --filter "dangling=false" --format "{{.Repository}}:{{.Tag}}")
            fi
          name: docker save
      - save_cache:
          key: docker-cache-{{ checksum "Dockerfile" }}-{{ checksum "src/Gemfile.lock" }}
          paths:
            - ~/caches/images.tar

  build-assets:
    docker:
      - image: circleci/node:lts
    steps:
      - checkout
      - run:
          command: npm install
          name: node_modules install
      - run:
          command: npm run prod
          name: build node_modules
      - run:
          command: mkdir -p ~/caches
          name: mkdir -p ~/caches
      - save_cache:
          key: assets-{{ .Branch }}-{{ .Revision }}
          paths:
            - src/public/assets/javascripts/webpack
          name: webpack save cache

  test-rails:
    machine: true
    steps:
      - checkout
      - restore_build_cache
      - run:
          command: docker-compose up -d mysql
          name: wait for db
      - run: 
          command: docker-compose run -u 1001:1001 rails bundle exec rake db:create db:migrate db:seed RAILS_ENV=test
          name: db setup
      - run:
          command: docker-compose run -u 1001:1001 rails bundle exec rake test
          name: rails test

  rubocop:
    machine: true
    steps:
      - checkout
      - restore_build_cache
      - run: 
          command: docker-compose run -u 1001:1001 rails bundle exec rubocop
          name: rubocop

workflows:
  version: 2
  build-and-test:
    jobs:
      - build-rails
      - build-assets
      - test-rails:
          requires:
            - build-rails
            - build-assets
      - rubocop:
          requires:
            - build-rails
            - build-assets
